unit uClasse.Bomba;

interface

type
  TClasseBomba = class
  private
    FDescricao: String;
    FIDBomba: Integer;
    FIDTanque: Integer;
    procedure SetDescricao(const Value: String);
    procedure SetIDBomba(const Value: Integer);
    procedure SetIDTanque(const Value: Integer);

  public
    constructor Create;
    destructor Destroy; override;

  property IDBomba: Integer read FIDBomba write SetIDBomba;
  property IDTanque: Integer read FIDTanque write SetIDTanque;
  property Descricao: String read FDescricao write SetDescricao;
  procedure Salvar(ATanque: TClasseBomba);
  procedure Excluir(IDTanque: Integer);

  end;

implementation

uses
  uDMPrincipal;

{ TClasseTanque }

{ TClasseTanque }

constructor TClasseBomba.Create;
begin

end;

destructor TClasseBomba.Destroy;
begin

  inherited;
end;

procedure TClasseBomba.Excluir(IDTanque: Integer);
begin
  if dmPrincipal.qryTanque.Locate('IDTanque', IdTanque, []) then
  begin
    dmPrincipal.qryTanque.Delete;
    dmPrincipal.qryTanque.Close;
    dmPrincipal.qryTanque.Open;
  end;
end;

procedure TClasseBomba.Salvar(ATanque: TClasseTanque);
begin
  dmPrincipal.qryTanque.Append;
  dmPrincipal.qryTanque.FieldByName('Descricao').Value := ATanque.Descricao;
  dmPrincipal.qryTanque.Post;

  dmPrincipal.qryTanque.Close;
  dmPrincipal.qryTanque.Open;
end;

procedure TClasseBomba.SetDescricao(const Value: String);
begin
  FDescricao := Value;
end;

procedure TClasseBomba.SetIDBomba(const Value: Integer);
begin
  FIDBomba := Value;
end;

procedure TClasseBomba.SetIDTanque(const Value: Integer);
begin
  FIDTanque := Value;
end;

end.
