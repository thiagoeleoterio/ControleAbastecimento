unit uClasse.Abastecimento;

interface

type
  TClasseBomba = class
  private

  public
    constructor Create;
    destructor Destroy; override;

    property IdAbastecimento: Integer;
    property IdBomba: Integer;
    property Data: TDateTime;
    property QtdLitros: Double;
    property Valor: Double;
    property ImpostoPercentual: Double;
    property ImpostoValor: Double;
    property ValorTotal: Double;

    procedure Salvar(ABomba: TClasseBomba);
    procedure Excluir(IDBomba: Integer);

  end;

implementation

uses
  uDMPrincipal;

{ TClasseTanque }

{ TClasseTanque }

constructor TClasseBomba.Create;
begin

end;

destructor TClasseBomba.Destroy;
begin

  inherited;
end;

procedure TClasseBomba.Excluir(IDBomba: Integer);
begin
  if dmPrincipal.qryBomba.Locate('IDBomba', IDBomba, []) then
  begin
    dmPrincipal.qryBomba.Delete;
    dmPrincipal.qryBomba.Close;
    dmPrincipal.qryBomba.Open;
  end;
end;

procedure TClasseBomba.Salvar(ABomba: TClasseBomba);
begin
  dmPrincipal.qryBomba.Append;
  dmPrincipal.qryBomba.FieldByName('Des_Bomba').Value := ABomba.Descricao;
  dmPrincipal.qryBomba.FieldByName('IDTanque').Value := ABomba.IDTanque;
  dmPrincipal.qryBomba.Post;

  dmPrincipal.qryBomba.Close;
  dmPrincipal.qryBomba.Open;
end;

procedure TClasseBomba.SetDescricao(const Value: String);
begin
  FDescricao := Value;
end;

procedure TClasseBomba.SetIDBomba(const Value: Integer);
begin
  FIDBomba := Value;
end;

procedure TClasseBomba.SetIDTanque(const Value: Integer);
begin
  FIDTanque := Value;
end;

end.
